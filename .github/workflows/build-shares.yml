name: Build Shares Mirror (daily)

on:
  workflow_dispatch:
  schedule:
    - cron: "17 7 * * *"   # daily ~07:17 UTC

permissions:
  contents: write     # needed for heartbeat commit
  pages: write        # needed to deploy to Pages
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # --- Get current UTC day-of-month for heartbeat condition ---
      - id: dateout
        name: Get day-of-month (UTC)
        run: echo "DAY=$(date -u +%d)" >> "$GITHUB_OUTPUT"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare output dir
        run: mkdir -p public

      # --- Download SEC companyfacts.zip ---
      - name: Download companyfacts.zip
        run: |
          set -e
          curl -L -o companyfacts.zip \
            https://www.sec.gov/Archives/edgar/daily-index/xbrl/companyfacts.zip

      # --- Unzip to cf/ (SEC changed layout: top-level JSONs) ---
      - name: Unzip companyfacts
        run: |
          set -e
          mkdir -p cf
          unzip -q companyfacts.zip -d cf
          echo "[DEBUG] Top-level after unzip:"
          ls -lh | head -50 || true
          echo "[DEBUG] cf listing (first 50):"
          ls -1 cf | head -50 || true
          echo "[DEBUG] Count of JSON files in cf:"
          find cf -maxdepth 1 -type f -name 'CIK*.json' | wc -l

      # --- Download tickers mapping (SEC JSON) ---
      - name: Download tickers.json
        run: |
          set -e
          curl -L -o tickers.json https://www.sec.gov/files/company_tickers.json
          wc -c tickers.json
          head -c 200 tickers.json || true

      # --- Set up Python ---
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # --- Run extractor ---
      - name: Extract latest shares per symbol
        env:
          UA: "Mozilla/5.0 MicroCap microcap@gmail.com"
        run: |
          set -e
          python3 extract_shares.py cf tickers.json public
          echo "[DEBUG] Output dir:"
          ls -lh public
          echo "[DEBUG] Lines in latest-shares.jsonl:"
          wc -l public/latest-shares.jsonl || true
          echo "[DEBUG] Meta preview:"
          jq '.' public/meta.json

      # --- Upload Pages artifact ---
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      # --- Deploy to GitHub Pages ---
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # --- Monthly heartbeat commit to avoid 60-day inactivity pause ---
      # Only run on scheduled events, only on day 01 (UTC), and only on a branch ref
      - name: Heartbeat commit (monthly)
        if: ${{ github.event_name == 'schedule' && steps.dateout.outputs.DAY == '01' && startsWith(github.ref, 'refs/heads/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # ensure we are on the branch we ran from
          git pull --ff-only
          mkdir -p automation
          date -u +"%Y-%m-%dT%H:%M:%SZ" > automation/heartbeat.txt
          git add automation/heartbeat.txt
          if git diff --cached --quiet; then
            echo "No heartbeat changes to commit."
          else
            git commit -m "automation: heartbeat"
            git push
          fi
