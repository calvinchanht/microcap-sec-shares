# build-shares.yml â€” v1.4.0
# - No functional change to workflow; extractor now outputs SIC fields
# - Keeps daily schedule + monthly heartbeat commit

name: Build SEC Shares

on:
  workflow_dispatch:
  schedule:
    - cron: "17 7 * * *"   # daily ~07:17 UTC
    - cron: "0 3 1 * *"    # monthly heartbeat commit on the 1st at 03:00 UTC

env:
  UA: "Mozilla/5.0 MicroCap microcap@gmail.com"   # <-- your descriptive UA (email/domain)

jobs:
  build:
    if: github.event.schedule != '0 3 1 * *'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create work dirs
        run: |
          set -e
          mkdir -p cf public

      - name: Download SEC companyfacts.zip (with UA) + verify
        run: |
          set -e
          echo "[INFO] Fetching companyfacts.zip with UA: $UA"
          curl -L --fail --retry 5 --retry-all-errors --retry-delay 2 \
               -H "User-Agent: $UA" \
               -H "Accept-Encoding: identity" \
               -o companyfacts.zip \
               https://www.sec.gov/Archives/edgar/daily-index/xbrl/companyfacts.zip

          echo "[DEBUG] File(1):"; file -b companyfacts.zip || true
          echo "[DEBUG] Size  (bytes):"; stat -c%s companyfacts.zip || stat -f%z companyfacts.zip || true

          if file companyfacts.zip | grep -iE 'HTML|ASCII|text' >/dev/null 2>&1; then
            echo "[ERROR] Downloaded content looks like HTML/text. First 60 lines:"
            head -n 60 companyfacts.zip || true
            exit 1
          fi
          if ! unzip -tq companyfacts.zip >/dev/null 2>&1; then
            echo "[ERROR] Zip integrity test failed. First 60 lines:"
            head -n 60 companyfacts.zip || true
            exit 1
          fi

      - name: Unzip companyfacts
        run: |
          set -e
          unzip -q companyfacts.zip -d cf
          echo "[DEBUG] Top level after unzip:"
          ls -lh | head -50 || true
          echo "[DEBUG] cf listing (first 50):"
          ls -1 cf | head -50 || true
          echo "[DEBUG] Count of JSON files right under cf:"
          find cf -maxdepth 1 -type f -name 'CIK*.json' | wc -l

      - name: Download SEC tickers (with UA) + convert
        run: |
          set -e
          curl -L --fail --retry 5 --retry-all-errors --retry-delay 2 \
               -H "User-Agent: $UA" \
               -H "Accept-Encoding: identity" \
               -o tickers.json \
               https://www.sec.gov/files/company_tickers.json
          if head -n1 tickers.json | grep -i '<!DOCTYPE' >/dev/null 2>&1; then
            echo "[ERROR] Tickers JSON looks like HTML. First 60 lines:"
            head -n 60 tickers.json
            exit 1
          fi
          wc -c tickers.json || true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Run extractor
        run: |
          set -e
          python3 extract_shares.py cf tickers.json public
          echo "[INFO] Outputs in ./public:"
          ls -lh public
          echo "[INFO] Rows in latest-shares.jsonl:"
          wc -l public/latest-shares.jsonl || true
          echo "[INFO] meta.json:"
          jq '.' public/meta.json

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  heartbeat:
    if: github.event.schedule == '0 3 1 * *'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Heartbeat commit to keep schedules alive
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin ${{ github.ref_name }}
          git checkout ${{ github.ref_name }}
          mkdir -p automation
          date -u +"%Y-%m-%dT%H:%M:%SZ" > automation/heartbeat.txt
          git add automation/heartbeat.txt
          if git commit -m "automation: heartbeat"; then
            git push origin ${{ github.ref_name }}
          else
            echo "[INFO] No changes to commit (heartbeat already up to date)."
          fi
